### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Cowork {
  companyName: String!
  createdAt: DateTime!
  description: String!
  id: Int!
  postedBy: User
  url: String!
  voters: [User!]!
}

input CoworkOrderByInput {
  companyName: Sort
  createdAt: Sort
  description: Sort
  url: Sort
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Feed {
  count: Int!
  coworks: [Cowork!]!
  id: ID
}

type Mutation {
  login(email: String!, password: String!): AuthPayload!
  post(companyName: String!, description: String!, url: String!): Cowork!
  signup(email: String!, name: String!, password: String!): AuthPayload!
  vote(linkId: Int!): Cowork
}

type Query {
  feed(filter: String!, orderBy: [CoworkOrderByInput!], skip: Int, take: Int): Feed!
}

enum Sort {
  asc
  desc
}

type User {
  coworks: [Cowork!]!
  email: String!
  id: Int!
  name: String!
  votes: [Cowork!]!
}

type Vote {
  cowork: Cowork!
  time: DateTime
  user: User!
}